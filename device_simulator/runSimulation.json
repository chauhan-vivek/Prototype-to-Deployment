{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "cronExpression": {
            "Description": "The cron expression for CW rule",
            "Type": "String"
        },
        "numDevices": {
            "Description": "The number of devices to be simulated",
            "Type": "String"
        },
        "deviceName": {
            "Description": "The name of the device as kept in simulation_details.json",
            "Type": "String"
        }
    },
    "Resources": {
        "GeneratorTriggerRolePolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "lambda:*",
                                "cloudformation:*",
                                "events:*",
                                "ssm:*"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:*"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                }
            }
        },
        "SimulatorLambdaRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": "GeneratorTriggerRolePolicy",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com",
                                    "cloudformation.amazonaws.com",
                                    "events.amazonaws.com",
                                    "ssm.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "GeneratorTriggerRolePolicy"
                    }
                ]
            }
        },
        "SimulatorTriggerRule": {
            "Type": "AWS::Events::Rule",
            "DependsOn": "SimulatorTriggerLambda",
            "Properties": {
                "Description": "Cloudwatch Events Rule which triggers on each interval specified",
                "Name": "GeneratorSimulationTrigger",
                "ScheduleExpression": {
                    "Ref": "cronExpression"
                },
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SimulatorTriggerLambda",
                                "Arn"
                            ]
                        },
                        "Id": "SimulatorTriggerLambda"
                    }
                ]
            }
        },
        "PermissionForEventsToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "SimulatorTriggerRule",
            "Properties": {
                "FunctionName": "SimulatorTriggerLambda",
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "SimulatorTriggerRule",
                        "Arn"
                    ]
                }
            }
        },
        "SimulatorTriggerLambda": {
            "DependsOn": "SimulatorLambdaRole",
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "hm-iot-infra-bucket",
                    "S3Key": "device_simulator/device_simulator.zip"
                },
                "FunctionName": "SimulatorTriggerLambda",
                "Environment": {
                    "Variables": {
                        "sns_topic_arn": "arn:aws:sns:us-east-1:667194736228:NotifyScriptRuns",
                        "service_role_arn": "arn:aws:iam::667194736228:role/service-role/RunVirtualIoTCommand-role-jivyabx1",
                        "num_devices": {
                            "Ref": "numDevices"
                        },
                        "device_name": {
                            "Ref": "deviceName"
                        },
                        "cloud9_id": "i-0384f7a8eeb8a6006"
                    }
                },
                "Handler": "device_simulator.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "SimulatorLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.9",
                "Timeout": 300,
                "MemorySize": 512,
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        }
    }
}